[{"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\React Folder\\frontend\\src\\index.js":"1","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\React Folder\\frontend\\src\\App.js":"2","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\React Folder\\frontend\\src\\Pages\\server.jsx":"3","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\React Folder\\frontend\\src\\Layouts\\MainLayout.jsx":"4","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\index.js":"5","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\App.js":"6","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\Pages\\customer.jsx":"7","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\Pages\\menu.jsx":"8","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\Layouts\\CustomerLayout.jsx":"9","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\Layouts\\MenuLayout.jsx":"10"},{"size":445,"mtime":1680378183811,"results":"11","hashOfConfig":"12"},{"size":344,"mtime":1680506515367,"results":"13","hashOfConfig":"12"},{"size":4765,"mtime":1680509871277,"results":"14","hashOfConfig":"12"},{"size":487,"mtime":1680389710563,"results":"15","hashOfConfig":"12"},{"size":459,"mtime":1682017434057,"results":"16","hashOfConfig":"17"},{"size":437,"mtime":1682352131847,"results":"18","hashOfConfig":"17"},{"size":10510,"mtime":1682351730116,"results":"19","hashOfConfig":"17"},{"size":8422,"mtime":1682352457557,"results":"20","hashOfConfig":"17"},{"size":636,"mtime":1682351634714,"results":"21","hashOfConfig":"17"},{"size":618,"mtime":1682351658755,"results":"22","hashOfConfig":"17"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1c4vwq6",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n15980",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\React Folder\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\React Folder\\frontend\\src\\App.js",["55"],[],"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\React Folder\\frontend\\src\\Pages\\server.jsx",["56","57","58","59"],[],"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\React Folder\\frontend\\src\\Layouts\\MainLayout.jsx",[],[],"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\index.js",[],[],"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\App.js",["60"],[],"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\Pages\\customer.jsx",[],[],"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\Pages\\menu.jsx",["61","62","63"],[],"\r\nimport {Link} from 'react-router-dom'\r\nimport React, {useEffect, useState} from 'react'\r\nimport axios from \"axios\"\r\nimport MenuLayout from '../Layouts/MenuLayout';\r\nimport '../Layouts/ServerLayout.css';\r\n\r\nfunction Menu() {    \r\n        // Use states for cart, products, and loading \r\n        const [cart, setCart] = useState([]);\r\n        const [products, setProducts] = useState([]);\r\n        const [isLoading, setIsLoading] = useState(false);\r\n        const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n        // fetchProduct is an async function that shows if items are loading in (test function) but also loads in data from products \r\n\r\n\r\n\r\n        const fetchProduct = async() => {\r\n            setIsLoading(true);\r\n            const result = await axios.get('products');\r\n            setProducts(await result.data);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        // addProductToCart allows user to press buttons to add to the receipt area\r\n        const addProductToCart = async(product) =>{\r\n            let findProductInCart = await cart.find(i=>{\r\n                return i.id === product.id\r\n            });\r\n\r\n            if(findProductInCart) {\r\n                let newCart = [];\r\n                let newItem;\r\n                cart.forEach(cartItem =>{\r\n                    if(cartItem.id === product.id) {\r\n                        newItem = {\r\n                            ...cartItem,\r\n                            quantity: cartItem.quantity + 1,\r\n                            totalAmount: cartItem.price * (cartItem.quantity + 1)\r\n                        }\r\n\r\n                        newCart.push(newItem);\r\n                    }\r\n                    else {\r\n                        newCart.push(cartItem);\r\n                    }\r\n                });\r\n\r\n                setCart(newCart);\r\n            }\r\n            else {\r\n                let addingProduct = {\r\n                    ...product,\r\n                    'quantity': 1,\r\n                    'totalAmount': product.price,\r\n                }\r\n\r\n                setCart([...cart, addingProduct]);\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            fetchProduct();\r\n            \r\n        },[]);\r\n\r\n        \r\n\r\n        // keeps track of total amount\r\n        useEffect(() => {\r\n            let newTotalAmount = 0;\r\n            cart.forEach(icart => {\r\n                const temp_total = parseFloat(icart.totalAmount);\r\n                newTotalAmount += parseFloat(temp_total.toFixed(2));\r\n            })\r\n            setTotalAmount(parseFloat(newTotalAmount.toFixed(2)));\r\n        },[cart])\r\n\r\n        // removes all items in cart\r\n        const removeAllProductsFromCart = async() => {\r\n            setCart([]);\r\n            setTotalAmount(0);\r\n        }\r\n\r\n        // test function to print\r\n        useEffect(() => {\r\n            console.log(products);\r\n        } ,[products]);\r\n\r\n\r\n    return (\r\n        <MenuLayout>\r\n\r\n            <div className='row'>\r\n\r\n                <td style={{fontSize: 50, fontFamily: 'Poppins'}}>Burritos:</td>\r\n                <div className='col-lg-8'>\r\n                {isLoading ? 'Loading' : <div className='row'>\r\n                    {products.map((product, key) =>\r\n                        <div key={key} className='col-lg-4 mb-4'>\r\n                            {product.type===\"burrito\" &&\r\n                            <button onClick={()=>addProductToCart(product)}>\r\n                            <p style={{fontFamily: 'Poppins'}}>{product.name}</p>\r\n                            <img src={product.image} className=\"img-fluid\" alt={product.name} />\r\n                            <p style={{fontFamily: 'Poppins'}}>${product.price}</p>\r\n                            </button>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                    </div>}\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <td style={{fontSize: 50, fontFamily: 'Poppins'}}>Bowls:</td>\r\n                <div className='col-lg-8'>\r\n                {isLoading ? 'Loading' : <div className='row'>\r\n                    {products.map((product, key) =>\r\n                        <div key={key} className='col-lg-4 md-4'>\r\n                            {product.type===\"bowl\" &&\r\n                            <button onClick={()=>addProductToCart(product)}>\r\n                            <p style={{fontFamily: 'Poppins'}}>{product.name}</p>\r\n                            <img src={product.image} className=\"img-fluid\" alt={product.name} />\r\n                            <p style={{fontFamily: 'Poppins'}}>${product.price}</p>\r\n                            </button>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                    </div>}\r\n                </div>\r\n\r\n\r\n                <td style={{fontSize: 50, fontFamily: 'Poppins'}}>Tacos:</td>\r\n                <div className='col-lg-8'>\r\n                {isLoading ? 'Loading' : <div className='row'>\r\n                    {products.map((product, key) =>\r\n                        <div key={key} className='col-lg-4 mb-4'>\r\n                            {product.type===\"taco\" &&\r\n                            <button onClick={()=>addProductToCart(product)}>\r\n                            <p style={{fontFamily: 'Poppins'}}>{product.name}</p>\r\n                            <img src={product.image} className=\"img-fluid\" alt={product.name} />\r\n                            <p style={{fontFamily: 'Poppins'}}>${product.price}</p>\r\n                            </button>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                    </div>}\r\n                </div>\r\n\r\n\r\n                <td style={{fontSize: 50, fontFamily: 'Poppins'}}>Sides:</td>\r\n                <div className='col-lg-8'>\r\n                {isLoading ? 'Loading' : <div className='row'>\r\n                    {products.map((product, key) =>\r\n                        <div key={key} className='col-lg-4 mb-4'>\r\n                            {product.type===\"side\" &&\r\n                            <button onClick={()=>addProductToCart(product)}>\r\n                            <p style={{fontFamily: 'Poppins'}}>{product.name}</p>\r\n                            <img src={product.image} className=\"img-fluid\" alt={product.name} />\r\n                            <p style={{fontFamily: 'Poppins'}}>${product.price}</p>\r\n                            </button>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                    </div>}\r\n                </div>\r\n\r\n\r\n                <td style={{fontSize: 50, fontFamily: 'Poppins'}}>Drinks:</td>\r\n                <div className='col-lg-8'>\r\n                {isLoading ? 'Loading' : <div className='row'>\r\n                    {products.map((product, key) =>\r\n                        <div key={key} className='col-lg-4 mb-4'>\r\n                            {product.type===\"drink\" &&\r\n                            <button onClick={()=>addProductToCart(product)}>\r\n                            <p style={{fontFamily: 'Poppins'}}>{product.name}</p>\r\n                            <img src={product.image} className=\"img-fluid\" alt={product.name} />\r\n                            <p style={{fontFamily: 'Poppins'}}>${product.price}</p>\r\n                            </button>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                    </div>}\r\n                </div>\r\n\r\n\r\n                <td style={{fontSize: 50, fontFamily: 'Poppins'}}>Others:</td>\r\n                <div className='col-lg-8'>\r\n                {isLoading ? 'Loading' : <div className='row'>\r\n                    {products.map((product, key) =>\r\n                        <div key={key} className='col-lg-4 mb-4'>\r\n                            {product.type===\"other\" &&\r\n                            <button onClick={()=>addProductToCart(product)}>\r\n                            <p style={{fontFamily: 'Poppins'}}>{product.name}</p>\r\n                            <img src={product.image} className=\"img-fluid\" alt={product.name} />\r\n                            <p style={{fontFamily: 'Poppins'}}>${product.price}</p>\r\n                            </button>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                    </div>}\r\n                </div>\r\n\r\n\r\n                \r\n\r\n                \r\n            </div>\r\n        </MenuLayout>\r\n    )\r\n}\r\n\r\nexport default Menu","C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\Layouts\\CustomerLayout.jsx",[],[],"C:\\Users\\Connor Hill\\Documents\\CSCE 315\\Team63_Project3_version2\\Customer Side\\frontend\\src\\Layouts\\MenuLayout.jsx",[],[],{"ruleId":"64","severity":1,"message":"65","line":9,"column":17,"nodeType":"66","messageId":"67","endLine":9,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":2,"column":9,"nodeType":"66","messageId":"67","endLine":2,"endColumn":13},{"ruleId":"64","severity":1,"message":"69","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":32,"column":29,"nodeType":"72","messageId":"73","endLine":32,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":41,"column":36,"nodeType":"72","messageId":"73","endLine":41,"endColumn":38},{"ruleId":"64","severity":1,"message":"65","line":10,"column":17,"nodeType":"66","messageId":"67","endLine":10,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":2,"column":9,"nodeType":"66","messageId":"67","endLine":2,"endColumn":13},{"ruleId":"64","severity":1,"message":"74","line":13,"column":16,"nodeType":"66","messageId":"67","endLine":13,"endColumn":27},{"ruleId":"64","severity":1,"message":"75","line":81,"column":15,"nodeType":"66","messageId":"67","endLine":81,"endColumn":40},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'mainlayout' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'totalAmount' is assigned a value but never used.","'removeAllProductsFromCart' is assigned a value but never used."]